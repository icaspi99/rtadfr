library(forecast)
autoplot(p)
autoplot(p[,1])
autoplot(p[,2])
autoplot(p[,3])
ts.plot(p)
plot.ts(p)
plot.ts(p, plot.type = "multiple")
1+1
plot.ts(p, plot.type = "single")
plot.ts(p[,2:3], plot.type = "single")
ts.plot(p[,2:3], plot.type = "single", col=c("blue", "red"))
p <- ts(cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), end = (2010, 12)  frequency = 12)
p <- ts(cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), end = (2010, 12)  frequency = 12)
p <- ts(cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), end = (2010, 12), frequency = 12)
cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2])
p <- cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2])
p <- ts(p,start = c(1870,1), end = (2010, 12), frequency = 12)
p <- ts(p,start = c(1870,1), end = c(2010, 12), frequency = 12)
p <- ts(p,start = c(1870,1), frequency = 12)
p <- cbind(snp[,1], testStat$testSeq, cvs$datestampCVs[,2])
p <- ts(p,start = c(1870,1), frequency = 12)
ts.plot(df[,2:3], plot.type = "single", col=c("blue", "red"))
df <- ts(cbind(snp[,1], testStat$testSeq,
cvs$datestampCVs[,2]),start = c(1870,1), frequency = 12)
ts.plot(df[,2:3], plot.type = "single", col=c("blue", "red"))
ts.plot(df[,2:3], plot.type = "single", col=c("blue", "red"))
library(ggplot2)
devtools::document()
library(rtadfr)
ur.df
devtools::load_all(".")
data(snp)
T <-nrow(snp)
r0 <- round(T*(0.01+1.8/sqrt(T)))
testStat <- rtadf(snp[,1], r0, test = "sadf")
library(rtadfr)
data(snp)
T <-nrow(snp)
r0 <- round(T*(0.01+1.8/sqrt(T)))
testStat <- rtadf(snp[,1], r0, test = "sadf")
library(rtadfr)
testStat <- rtadf(snp[,1], r0, test = "sadf")
cvs <- rtadfSim(T, nrep = 100, r0, test = "sadf")
df <- ts(cbind(testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), frequency = 12)
cvs$datestampCVs
testStat
devtools::load_all(".")
testStat <- rtadf(snp[1:500,1], r0, test = "sadf")
testStat <- rtadf(snp[,1], r0, test = "sadf")
cvs <- rtadfSimPar(T, nrep = 1000, r0, test = "sadf")
df <- ts(cbind(testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), frequency = 12)
ts.plot(df[,2:3], plot.type = "single", col=c("blue", "red"))
ts.plot(df, plot.type = "single", col=c("blue", "red"))
testDf <- data.frame("test statistic" = testStat$testStat, "critical values" = cvs$testCVs)
testDf
print(testStat$testStat, cvs$testCVs)
print(testStat$testStat)
testDf <- list("test statistic" = testStat$testStat, "critical values" = cvs$testCVs)
testDf
print(testDf)
library(rtadfr)
devtools::document()
library(rtadfr)
install.packages("pkgdown")
pkgdown::build_site()
library(pkgdown)
pkgdown::build_site()
devtools::install_github("r-lib/pkgdown")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
library(pkgdown)
pkgdown::build_site()
vignette("pkgdown")
vignette(pkgdown)
vignette(pkgdwon)
vignette("pkgdown")
?build_site
y <- rnorm(10)
eps <- c(0, diff(y))
eps <- eps - mean(eps)
ur.df
library(rtadfr)
library(pkgdown)
pkgdown::build_site()
template_reference()
person("Itamar", "Caspi", email = "caspi.itamar@gmail.com", role = c("aut", "cre")
)
usethis::use_news_md()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
library(rtadfr)
library(pkgdown)
pkgdown::build_site()
pkgdown::build_site
pkgdown::build_site()
library(rtadfr)
library(pkgdown)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::template_navbar()
pkgdown::template_navbar()
pkgdown::template_navbar((path = "."))
pkgdown::clean_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
library(rtadfr)
library(rtadfr)
library(rtadfr)
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
library(rtadfr)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::clean_site()
pkgdown::build_site()
devtools::use_travis()
devtools::use_dev_version()
devtools::use_testthat()
library()
library(usethis)
use_data_raw()
file.create("data-raw/devstuff.R")
use_tidy_description()
use_tidy_versions()
use_gpl3_license()
use_gpl3_license()
usethis::use_gpl3_license()
options(usethis.full)name = "Itamar Caspi")
options(usethis.full_name = "Itamar Caspi")
usethis::use_gpl3_license()
use_tidy_description()
library(rtadfr)
source('C:/Users/user/Dropbox/Documents/rtadfr/data-raw/devstuff.R')
library(rtadfr)
source('C:/Users/user/Dropbox/Documents/rtadfr/data-raw/devstuff.R')
source('C:/Users/user/Dropbox/Documents/rtadfr/data-raw/devstuff.R')
data(snp)  # load S&P 500 data
snp <- snp[1:200,1]
T    <- nrow(snp)  # Sample size
snp <- snp[1:200,]
snp <- snp[1:200,1]
T    <- length(snp)  # Sample size
r0   <- round(T*(0.01 + 1.8/sqrt(T)))  # Minimal window size
test <- rtadf(snp[,1], r0, test = "sadf")  # estimate test statistic and date-stamping sequence
test <- rtadf(snp, r0, test = "sadf")  # estimate test statistic and date-stamping sequence
cvs  <- rtadfSimPar(T, nrep = 100, r0, test = "sadf")  # simulate critical values and date-stamping threshold
testDf <- list("test statistic" = test$testStat, "critical values" = cvs$testCVs)  # test results
print(testDf)
dateStampDf <- ts(cbind(testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), frequency = 12)  # data for datestamping procedure
dateStampDf <- ts(cbind(test$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), frequency = 12)  # data for datestamping procedure
ts.plot(df, plot.type = "single", col = c("blue", "red"))
ts.plot(dateStampDf, plot.type = "single", col = c("blue", "red"))
source('C:/Users/user/Dropbox/Documents/rtadfr/data-raw/devstuff.R')
source('C:/Users/user/Dropbox/Documents/rtadfr/data-raw/devstuff.R')
library(rtadfr)
data(snp)  # load S&P 500 data
T   <- nrow(snp)  # Sample size
r0  <- round(T*(0.01 + 1.8 / sqrt(T)))  # Minimal window size
test <- rtadf(snp[,1], r0, test = "sadf")  # estimate test statistic and date-stamping sequence
cvs  <- rtadfSimPar(T, nrep = 1000, r0, test = "sadf")  # simulate critical values and date-stamping threshold
testDf <- list("test statistic" = test$testStat, "critical values" = cvs$testCVs)  # test results
print(testDf)
dateStampDf <- ts(cbind(testStat$testSeq, cvs$datestampCVs[,2]),
start = c(1870,1), frequency = 12)  # data for datestamping procedure
ts.plot(dateStampDf, plot.type = "single", col=c("blue", "red"))
ts.plot(dateStampDf, plot.type = "single", col=c("blue", "red"))
a <- matrix(rnorm(), nrow=100 ,ncol = 3)
a <- matrix(rnorm(1), nrow=100 ,ncol = 3)
a <- rep(rnorm(10), 3)
a
a[1,]
a[,1]
a <- matrix(rnorm(300), nrow=100 ,ncol = 3)
a[,1]
rowQuantiles(a)
rowQuantiles(a, probs = 0.95)
a <- matrix(rnorm(300), nrow=3 ,ncol = 100)
rowQuantiles(a, probs = 0.95)
apply(a, 1, quantile, probs = 0.95,  na.rm = TRUE)
colQuantiles(a, probs = 0.95)
apply(a, 2, quantile, probs = 0.95,  na.rm = TRUE)
set.seed(1203)
x <- rnorm(100)
rtadf(x, 10, test = "adf", lags = 1, selectlags = "fixed")
set.seed(1203)
x <- rnorm(100)
rtadf(x, 10, test = "adf", lags = 1, selectlags = "Fixed")
stat <- rtadf(x, 10, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
stat <- rtadf(x, 90, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
stat <- rtadf(x, 90, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
stat <- rtadf(x, 10, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
rtadf(x, 10, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
rtadf(x, 10, test = "adf", lags = 1, selectlags = "Fixed")
stat <- rtadf(x, 10, test = "sadf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
stat <- rtadf(x, 90, test = "sadf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
stat <- rtadf(x, 90, test = "gsadf", lags = 1, selectlags = "Fixed")$testStat[1]
stat
pkgdown::build_site()
library(rtadfr)
search()
doRNG::%dorng%
library(rtadfr)
roxygen2::roxygenize()
roxygen2::roxygenize()
library(rtadfr)
roxygen2::roxygenize()
library(rtadfr)
pkgdown::build_site()
usethis::use_tidy_description()
usethis::use_tidy_description()
usethis::use_tidy_versions()
library(rtadfr)
roxygen2::roxygenize()
roxygen2::roxygenize()
pkgdown::build_site()
cv <- rtadfSim(t = 100, r0 = 10, nrep = 1000, test = "sadf")
library(rtadfr)
cv <- rtadfSim(t = 100, r0 = 10, nrep = 1000, test = "sadf")
NAmat        <- matrix(NA, nrow = 3, ncol = r0 - 1)
datestampCVs <- rbind(NAmat, datestampCVs)
datestampCVs <- rbind(NAmat, t(datestampCVs))
a <- t(datestampCVs)
NAmat        <- matrix(NA, nrow = r0 - 1, ncol = 3)
datestampCVs <- rbind(NAmat, t(datestampCVs))
View(datestampCVs)
library(rtadfr)
cv <- rtadfSim(t = 100, r0 = 10, nrep = 100, test = "sadf")
pkgdown::build_site()
pkgdown::build_site()
roxygen2::roxygenize()
pkgdown::build_site()
usethis::use_tidy_versions()
library(rtadfr)
usethis::use_tidy_versions()
library(rtadfr)
roxygen2::roxygenize()
pkgdown::build_site()
roxygen2::roxygenize()
adf   <- rtadfSim(T, 90, 10, test = "adf")
adf   <- rtadfSim(T, 90, 10, test = "adf")[1]
adf   <- rtadfSim(T, 90, 10, test = "adf")[[1]]
adf   <- rtadfSim(T, 90, 10, test = "adf")[[1]]
sadf  <- rtadfSim(T, 90, 10, test = "sadf")[[1]]
gsadf <- rtadfSim(T, 90, 10, test = "gsadf")[[1]]
adf   <- rtadfSim(T, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSim(T, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSim(T, 90, 1, test = "gsadf")[[1]]
adf   <- rtadfSimPar(T, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(T, 90, 1, test = "sadf")[[1]]
library(rtadfr)
adf   <- rtadfSim(T, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSim(T, 90, 1, test = "sadf")[[1]]
sadf  <- rtadfSimPar(T, 90, 1, test = "sadf")[[1]]
set.seed(1203)
obs  <- 100
r0 <- 90
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSim(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSim(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSim(obs, 90, 1, test = "gsadf")[[1]]
sadf[1]
sadf[[1]]
gsadf[[1]]
adf
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
roxygen2::roxygenise()
library(rtadfr)
context("Tests rtadf results")
set.seed(1203)
x <- rnorm(100)
adf   <- rtadf(x, 90, test = "adf", lags = 1, selectlags = "Fixed")$testStat[1]
sadf  <- rtadf(x, 90, test = "sadf", lags = 1, selectlags = "Fixed")$testStat[1]
gsadf <- rtadf(x, 90, test = "gsadf", lags = 1, selectlags = "Fixed")$testStat[1]
expect_equal(adf, -7.02676, tolerance = 0.00001)
expect_equal(sadf, -6.800959, tolerance = 0.00001)
expect_equal(gsadf, -6.44748, tolerance = 0.00001)
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSim(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSim(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSim(obs, 90, 1, test = "gsadf")[[1]]
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
devtools::load_all(".")
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
adf
sadf[[``]]
sadf[[``]]
sadf[[1]]
gsadf[[1]]
library(rtadfr)
library(rtadfr)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
foreach::foreach()
library(rtadfr)
search()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(rtadfr)
foreach:::foreach()
roxygen2::roxygenise()
library(rtadfr)
?:::
usethis::use_tidy_contributing()
usethis::use_tidy_description()
usethis::use_tidy_versions()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
sadf
gsadf
adf
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
sadf
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
gsadf
library(rtadfr)
library(rtadfr)
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
דשגכ
sadf
set.seed(1203)
obs  <- 100
r0 <- 90
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
sadf
set.seed(1203)
obs  <- 100
r0 <- 90
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
gsadf
library(rtadfr)
library(rtadfr)
library(rtadfr)
devtools::document()
set.seed(1203)
obs  <- 100
r0 <- 90
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
expect_equal(sadf[[1]], -2.222906, tolerance = 0.000001)
library(testthat)
expect_equal(sadf[[1]], -2.222906, tolerance = 0.000001)
a <- expect_equal(sadf[[1]], -2.222906, tolerance = 0.000001)
adf
expect_equal(sadf[[1]], -2.874247, tolerance = 0.000001)
sadf
expect_equal(sadf[[1]], -2.222906, tolerance = 0.000001)
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
expect_equal(adf, -2.874247, tolerance = 0.000001)
a <- expect_equal(adf, -2.874247, tolerance = 0.000001)
devtools::document()
roxygen2::roxygenize()
getwd
roxygen2::roxygenize()
devtools::document()
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(rtadfr)
devtools::build()
pkgdown::build_site()
getwd
getwd()
setwd("C:/Users/user/Dropbox/Documents/rtadfr")
devtools::document()
roxygen2::roxygenise()
library(rtadfr)
library(rtadfr)
library(rtadfr)
devtools::test
devtools::test()
devtools::check()
set.seed(1203)
obs  <- 100
r0 <- 90
adf   <- rtadfSimPar(obs, 90, 1, test = "adf")[[1]]
expect_equal(adf, -2.874247, tolerance = 0.000001)
sadf  <- rtadfSimPar(obs, 90, 1, test = "sadf")[[1]]
expect_equal(sadf[[1]], -2.222906, tolerance = 0.000001)
sadf
expect_equal(sadf[[1]], -1.739771, tolerance = 0.000001)
gsadf <- rtadfSimPar(obs, 90, 1, test = "gsadf")[[1]]
gsadf
devtools::check()
library(rtadfr)
devtools::load_all(".")
devtools::check()
devtools::document()
library(rtadfr)
library(rtadfr)
library(rtadfr)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(rtadfr)
roxygen2::roxygenise()
devtools::check()
